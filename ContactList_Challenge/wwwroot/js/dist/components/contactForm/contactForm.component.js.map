{"version":3,"sources":["components/contactForm/contactForm.component.js"],"names":["controller","contactService","$mdToast","vm","contacts","contact","Object","create","contactBeingEdited","$onInit","getContacts","then","res","data","err","console","log","submitContact","postContact","addOrUpdateContact","showSimple","firstName","resetContact","message","selectForEdit","assign","deleteContact","removeContact","index","findIndex","c","id","splice","push","contactForm","templateUrl","COMPONENTS_URL","controllerAs"],"mappings":";;;;;;;AAAA;;AAEA,IAAMA,aAAa,SAAbA,UAAa,CAASC,cAAT,EAAyBC,QAAzB,EAAmC;AAClD,QAAMC,KAAK,IAAX;;AAEAA,OAAGC,QAAH,GAAc,EAAd;AACAD,OAAGE,OAAH,GAAaC,OAAOC,MAAP,CAAc,IAAd,CAAb;AACAJ,OAAGK,kBAAH,GAAwB,IAAxB;;AAEAL,OAAGM,OAAH,GAAa,YAAW;AACpBR,uBAAeS,WAAf,GACKC,IADL,CACU,UAACC,GAAD,EAAS;AACXT,eAAGC,QAAH,GAAcQ,IAAIC,IAAlB;AACH,SAHL,EAGO,UAACC,GAAD,EAAS;AACRC,oBAAQC,GAAR,CAAYF,GAAZ;AACH,SALL;AAMH,KAPD;;AASAX,OAAGc,aAAH,GAAmB,YAAW;AAC1BhB,uBAAeiB,WAAf,CAA2Bf,GAAGE,OAA9B,EACKM,IADL,CACU,UAACC,GAAD,EAAS;AACX,gBAAMP,UAAUO,IAAIC,IAApB;AACAM,+BAAmBd,OAAnB;AACAH,qBAASkB,UAAT,CAAuBf,QAAQgB,SAA/B;AACAlB,eAAGmB,YAAH;AACH,SANL,EAMO,UAACR,GAAD,EAAS;AACRZ,qBAASkB,UAAT,CAAoBN,IAAID,IAAJ,CAASU,OAA7B;AACH,SARL;AASH,KAVD;;AAYApB,OAAGqB,aAAH,GAAmB,UAASnB,OAAT,EAAkB;AACjCF,WAAGE,OAAH,GAAaC,OAAOmB,MAAP,CAAc,EAAd,EAAkBpB,OAAlB,CAAb;AACAF,WAAGK,kBAAH,GAAwBH,OAAxB;AACH,KAHD;;AAKAF,OAAGuB,aAAH,GAAmB,UAASrB,OAAT,EAAkB;AACjCJ,uBAAeyB,aAAf,CAA6BrB,OAA7B,EACKM,IADL,CACU,UAACC,GAAD,EAAS;AACX,gBAAMP,UAAUO,IAAIC,IAApB;AACAc,0BAActB,OAAd;AACAH,qBAASkB,UAAT,CAAuBf,QAAQgB,SAA/B;AACH,SALL,EAKO,UAACP,GAAD,EAAS;AACRZ,qBAASkB,UAAT,CAAoBN,IAAID,IAAJ,CAASU,OAA7B;AACH,SAPL;AAQH,KATD;;AAWApB,OAAGmB,YAAH,GAAkB,YAAW;AACzBnB,WAAGE,OAAH,GAAaC,OAAOC,MAAP,CAAc,IAAd,CAAb;AACAJ,WAAGK,kBAAH,GAAwB,IAAxB;AACH,KAHD;;AAKA,aAASmB,aAAT,CAAuBtB,OAAvB,EAAgC;AAC5B,YAAMuB,QAAQzB,GAAGC,QAAH,CAAYyB,SAAZ,CAAsB,UAACC,CAAD;AAAA,mBAAOA,EAAEC,EAAF,KAAS1B,QAAQ0B,EAAxB;AAAA,SAAtB,CAAd;;AAEA,YAAIH,QAAQ,CAAC,CAAb,EAAgBzB,GAAGC,QAAH,CAAY4B,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AACnB;;AAED,aAAST,kBAAT,CAA4Bd,OAA5B,EAAqC;AACjC,YAAMuB,QAAQzB,GAAGC,QAAH,CAAYyB,SAAZ,CAAsB,UAACC,CAAD;AAAA,mBAAOA,EAAEC,EAAF,KAAS1B,QAAQ0B,EAAxB;AAAA,SAAtB,CAAd;;AAEA,YAAIH,QAAQ,CAAC,CAAb,EAAgB;AACZzB,eAAGC,QAAH,CAAYwB,KAAZ,IAAqBvB,OAArB;AACH,SAFD,MAEO;AACHF,eAAGC,QAAH,CAAY6B,IAAZ,CAAiB5B,OAAjB;AACH;AACJ;AACJ,CAhED;;AAkEO,IAAM6B,oCAAc;AACvBC,iBAAa,qBAAUC,cAAV,GAA2B,yCADjB;AAEvBpC,gBAAYA,UAFW;AAGvBqC,kBAAc;AAHS,CAApB","file":"contactForm.component.js","sourcesContent":["import { constants } from '../../constants.js';\r\n\r\nconst controller = function(contactService, $mdToast) {\r\n    const vm = this;\r\n\r\n    vm.contacts = [];\r\n    vm.contact = Object.create(null);\r\n    vm.contactBeingEdited = null;\r\n        \r\n    vm.$onInit = function() {\r\n        contactService.getContacts()\r\n            .then((res) => {\r\n                vm.contacts = res.data\r\n            }, (err) => {\r\n                console.log(err);\r\n            });\r\n    }\r\n\r\n    vm.submitContact = function() {\r\n        contactService.postContact(vm.contact)\r\n            .then((res) => {\r\n                const contact = res.data\r\n                addOrUpdateContact(contact);\r\n                $mdToast.showSimple(`${contact.firstName} added to your contacts`);\r\n                vm.resetContact();\r\n            }, (err) => {\r\n                $mdToast.showSimple(err.data.message);\r\n            });\r\n    }\r\n\r\n    vm.selectForEdit = function(contact) {\r\n        vm.contact = Object.assign({}, contact);\r\n        vm.contactBeingEdited = contact;\r\n    }\r\n\r\n    vm.deleteContact = function(contact) {\r\n        contactService.deleteContact(contact)\r\n            .then((res) => {\r\n                const contact = res.data;\r\n                removeContact(contact);\r\n                $mdToast.showSimple(`${contact.firstName} removed from your contacts`)\r\n            }, (err) => {\r\n                $mdToast.showSimple(err.data.message);\r\n            });\r\n    }\r\n\r\n    vm.resetContact = function() {\r\n        vm.contact = Object.create(null);\r\n        vm.contactBeingEdited = null;\r\n    }\r\n\r\n    function removeContact(contact) {\r\n        const index = vm.contacts.findIndex((c) => c.id === contact.id);\r\n\r\n        if (index > -1) vm.contacts.splice(index, 1);\r\n    }\r\n\r\n    function addOrUpdateContact(contact) {\r\n        const index = vm.contacts.findIndex((c) => c.id === contact.id);\r\n\r\n        if (index > -1) {\r\n            vm.contacts[index] = contact;\r\n        } else {\r\n            vm.contacts.push(contact);\r\n        }\r\n    }\r\n}\r\n\r\nexport const contactForm = {\r\n    templateUrl: constants.COMPONENTS_URL + 'contactForm/contact-form-component.html',\r\n    controller: controller,\r\n    controllerAs: 'vm'\r\n};"]}